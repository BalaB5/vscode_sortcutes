{
	"Print to console": {
		"scope": "java",
		"prefix": "bsexp",
		"body": [
			" public static int evaluate(String exp) {Stack<Integer> vluList = new Stack<Integer>();Stack<Character> opList = new Stack<Character>();for (int i = 0; i < exp.length(); i++) {char data = exp.charAt(i);if (data == ' ')continue;if (data >= '0' && data <= '9') {StringBuilder num = new StringBuilder();while (i < exp.length() && exp.charAt(i) >= '0' && exp.charAt(i) <= '9') {num.append(exp.charAt(i++));}vluList.push(Integer.parseInt(num.toString()));i--;} else if (data == '(') {opList.push(data);} else if (data == ')') {while (opList.peek() != '(') {vluList.push(cal(opList.pop(), vluList.pop(), vluList.pop()));}opList.pop();} else if (isOp(data)) {while (!opList.isEmpty() && check(opList.peek(), data)) {vluList.push(cal(opList.pop(), vluList.pop(), vluList.pop()));}opList.push(data);}}while (!opList.isEmpty()) {vluList.push(cal(opList.pop(), vluList.pop(), vluList.pop()));}return vluList.pop();}"
		    " public static Boolean isOp(char vlu) { if (vlu == '+' || vlu == '-' || vlu == '*' || vlu == '/') {return true; }return false; }"
		    " public static int cal(char op, int b, int a) {if (op == '+') {return a + b;} else if (op == '-') {return a - b;} else if (op == '*') {return a * b;} else if (op == '/' && a != 0 && b != 0) {return a / b;}return 0; }"
		    " public static Boolean check(char op1, char op2) {if (op1 == '(') { return false;} else if ((op1 == '+' || op1 == '-') && (op2 == '*' || op2 == '/')) {return false;}return true;}"
	],
		"description": "Log output to console"
	}
}